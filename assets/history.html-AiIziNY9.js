import{_ as a,o as n,c as s,b as t}from"./app-KJPG7_2i.js";const e="/assets/history-xohKnESD.png",p={},i=t('<h1 id="istoria-crearii-react" tabindex="-1"><a class="header-anchor" href="#istoria-crearii-react"><span>Istoria creării React</span></a></h1><p>Dacă ne imaginăm istoria dezvoltării web-ului ca un scurt plan, ar arăta astfel:</p><p><img src="'+e+`" alt="Istoria creării React"></p><h2 id="inainte-de-javascript" tabindex="-1"><a class="header-anchor" href="#inainte-de-javascript"><span>Înainte de JavaScript</span></a></h2><p>În acele vremuri îndepărtate, site-urile web erau generate în întregime pe server, tot marcajul era livrat browserului în formă finită și nu se schimba pe partea clientului. Dacă utilizatorul apăsa un buton, browserul cerea un nou marcaj de la server și pagina se reîncărca. Așa se întâmpla de fiecare dată când utilizatorul efectua orice acțiune pe site.</p><h2 id="dupa-javascript-si-ajax" tabindex="-1"><a class="header-anchor" href="#dupa-javascript-si-ajax"><span>După JavaScript și AJAX</span></a></h2><p>După apariția acestor instrumente, site-urile au devenit interactive. JS permitea manipularea arborelui DOM, iar tehnologia AJAX permitea încărcarea datelor pe pagină în porțiuni, fără reîncărcare completă. Puterea de calcul a calculatoarelor și telefoanelor creștea, iar clientul JS începea să efectueze operații tot mai complexe în browser. Programele au început să migreze treptat din versiuni desktop în versiuni web. Dar pentru scrierea aplicațiilor complexe, erau necesare încă multe eforturi.</p><h2 id="biblioteci-si-frameworks" tabindex="-1"><a class="header-anchor" href="#biblioteci-si-frameworks"><span>Biblioteci și frameworks</span></a></h2><p>Atunci au început să apară biblioteci și frameworks. Una dintre primele a fost jQuery - un instrument puternic și elegant pentru acele timpuri. Dar chiar și cu acesta, scrierea aplicațiilor era destul de dificilă. Problema era în abordarea imperativă a dezvoltării. Adăugarea de noi funcționalități în aplicațiile de atunci putea ușor să strice funcționalitatea existentă. Interdependența unor caracteristici față de altele era imensă, iar dezvoltarea necesita mult efort și timp. De exemplu, la dezvoltarea unui magazin online, era necesar să verificați dacă funcționalitatea contului personal nu a fost stricată după modificările din coș. Aceasta a fost o muncă extenuantă și minuțioasă. Pentru a reduce durerea dezvoltatorilor în scrierea site-urilor și aplicațiilor complexe, au fost create primele frameworks: Backbone.js, Knockout.js și Ember.js. Dar, fiind frameworks și nu biblioteci, ele impuneau o anumită structură a aplicației și soluții arhitecturale. Dezvoltatorilor le-a luat mult timp să se obișnuiască cu noile modalități de scriere a codului. frameworksle, deși rezolvau o parte din probleme, totuși impuneau restricții asupra libertății de gândire a dezvoltatorilor în proiectarea site-urilor și aplicațiilor. În plus, din cauza abordării imperative, a apărut problema scalabilității aplicațiilor.</p><h2 id="si-atunci-a-aparut-ea-biblioteca-react" tabindex="-1"><a class="header-anchor" href="#si-atunci-a-aparut-ea-biblioteca-react"><span>Și atunci a apărut ea - biblioteca React</span></a></h2><p>Totul s-a schimbat în 2013, când codul sursă al bibliotecii React a fost prezentat lumii. Spre deosebire de un framework, biblioteca nu impune restricții asupra arhitecturii aplicației și oferă libertate de alegere: dezvoltatorul decide singur ce bibliotecă să folosească împreună cu React pentru rutare, gestionarea stării, interacțiunea cu serverul și așa mai departe. React poate fi aplicat practic în orice condiții și complexitatea stivei poate fi mărită doar dacă este necesar pentru funcționalitatea aplicației. React are multe avantaje care îl fac să iasă în evidență față de alte biblioteci.</p><p>Veți fi convins de acest lucru pe măsură ce începeți să lucrați cu biblioteca în cadrul cursului. Dar pentru moment, uitați-vă cât de elegant arată codul în React:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//React.js</span>

<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span>Ai apăsat de <span class="token punctuation">{</span>count<span class="token punctuation">}</span> ori<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setCount</span><span class="token punctuation">(</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        Apasă pe mine
      <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Comparați-l cu codul în Ember.js:</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code>//Ember.js

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Ai apăsat de {{this.count}} ori<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>button<span class="token punctuation">&quot;</span></span> <span class="token attr-name">{{on</span> <span class="token attr-name">&quot;click&quot;</span> <span class="token attr-name">(fn</span> <span class="token attr-name">this.change)}}</span><span class="token punctuation">&gt;</span></span>
    Apasă pe mine
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Component <span class="token keyword">from</span> <span class="token string">&#39;@glimmer/component&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> tracked <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@glimmer/tracking&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> action <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ember/object&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">class</span> <span class="token class-name">CounterComponent</span> <span class="token keyword">extends</span> <span class="token class-name">Component</span> <span class="token punctuation">{</span>
  @tracked count <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  @action
  <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sau, de exemplu, același cod în Backbone.js:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//Backbone.js:</span>

<span class="token keyword">var</span> Counter <span class="token operator">=</span> Backbone<span class="token punctuation">.</span>Model<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">defaults</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> cnt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> CounterView <span class="token operator">=</span> Backbone<span class="token punctuation">.</span>View<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token function-variable function">initialize</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>render<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">events</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token string-property property">&#39;click .plus&#39;</span><span class="token operator">:</span> <span class="token string">&#39;add&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> html<span class="token operator">=</span><span class="token string">&#39;&lt;div&gt;&lt;p&gt;Ai apăsat de &#39;</span><span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;value&#39;</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&#39; ori&lt;/p&gt;&#39;</span><span class="token punctuation">;</span>
        html <span class="token operator">+=</span> <span class="token string">&#39;&lt;button class=&quot;plus&quot;&gt;Apasă pe mine&lt;/button&gt;&lt;div&gt;&#39;</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>model<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> view <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CounterView</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">model</span><span class="token operator">:</span> cnt <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
view<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Suportul codului în React pare o sarcină abordabilă chiar și pentru un începător, în timp ce pentru scalarea unei aplicații pe alte frameworks va fi necesar să petreceți cel puțin jumătate de zi singur cu documentația. Abordarea declarativă în dezvoltarea interfețelor utilizatorilor a făcut biblioteca React un instrument atât de convenabil și popular. În lecțiile următoare, vom vorbi mai detaliat despre caracteristicile React.</p>`,19),o=[i];function c(l,r){return n(),s("div",null,o)}const d=a(p,[["render",c],["__file","history.html.vue"]]),k=JSON.parse('{"path":"/base/history.html","title":"Istoria creării React","lang":"ro-RO","frontmatter":{"title":"Istoria creării React","lang":"ro-RO","description":"Istoria creării React Dacă ne imaginăm istoria dezvoltării web-ului ca un scurt plan, ar arăta astfel: Istoria creării React Înainte de JavaScript În acele vremuri îndepărtate, ...","head":[["meta",{"property":"og:url","content":"https://react.md/base/history.html"}],["meta",{"property":"og:site_name","content":"React.js - Curs de Dezvoltare"}],["meta",{"property":"og:title","content":"Istoria creării React"}],["meta",{"property":"og:description","content":"Istoria creării React Dacă ne imaginăm istoria dezvoltării web-ului ca un scurt plan, ar arăta astfel: Istoria creării React Înainte de JavaScript În acele vremuri îndepărtate, ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ro-RO"}],["meta",{"property":"og:updated_time","content":"2024-03-09T11:18:09.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-09T11:18:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Istoria creării React\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-09T11:18:09.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Înainte de JavaScript","slug":"inainte-de-javascript","link":"#inainte-de-javascript","children":[]},{"level":2,"title":"După JavaScript și AJAX","slug":"dupa-javascript-si-ajax","link":"#dupa-javascript-si-ajax","children":[]},{"level":2,"title":"Biblioteci și frameworks","slug":"biblioteci-si-frameworks","link":"#biblioteci-si-frameworks","children":[]},{"level":2,"title":"Și atunci a apărut ea - biblioteca React","slug":"si-atunci-a-aparut-ea-biblioteca-react","link":"#si-atunci-a-aparut-ea-biblioteca-react","children":[]}],"git":{"updatedTime":1709983089000,"contributors":[{"name":"Bargan Nicolai","email":"41567806+Nikba-Creative-Studio@users.noreply.github.com","commits":1},{"name":"nikba","email":"41567806+Nikba-Creative-Studio@users.noreply.github.com","commits":1}]},"filePathRelative":"base/history.md","autoDesc":true}');export{d as comp,k as data};
