import{_ as e,r as s,o,c as i,a,d as n,e as p,b as c}from"./app-KJPG7_2i.js";const r={},l=c(`<h1 id="virtual-dom" tabindex="-1"><a class="header-anchor" href="#virtual-dom"><span>Virtual DOM</span></a></h1><p>În lecția anterioară, am analizat particularitățile renderizării marcajului și transformarea ReactDOM în DOM.</p><p>A sosit momentul să aflăm ce stă în spatele acestei magii.</p><p>După cum vă amintiți, un element în React este un obiect simplu.</p><p>Să examinăm codul unui element:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;section&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
	React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
		React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;Titlu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;h2&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;Subtitlu&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> React<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;Paragraf&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Așa arată arborele de elemente în React. Acest cod poate fi reprezentat într-o formă simplificată:</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;element&quot;</span><span class="token operator">:</span> <span class="token string">&quot;section&quot;</span><span class="token punctuation">,</span>
	<span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span>
			<span class="token property">&quot;element&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
				<span class="token punctuation">{</span>
					<span class="token property">&quot;element&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span>
					<span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Titlu&quot;</span>
				<span class="token punctuation">}</span><span class="token punctuation">,</span>
				<span class="token punctuation">{</span>
					<span class="token property">&quot;element&quot;</span><span class="token operator">:</span> <span class="token string">&quot;h2&quot;</span><span class="token punctuation">,</span>
					<span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Subtitlu&quot;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">]</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token punctuation">{</span>
			<span class="token property">&quot;element&quot;</span><span class="token operator">:</span> <span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span>
			<span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
				<span class="token punctuation">{</span>
					<span class="token property">&quot;element&quot;</span><span class="token operator">:</span> <span class="token string">&quot;p&quot;</span><span class="token punctuation">,</span>
					<span class="token property">&quot;children&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Paragraf&quot;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">]</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Aici este prezentată o structură arborescentă de obiecte. În ea, un obiect rădăcină <code>&quot;section&quot;</code> conține mai mulți copii - aceștia sunt indicați în <code>children</code>. Și elementele copil conțin, de asemenea, propriii <code>children</code>. Arborele de obiecte poate avea un număr enorm de niveluri de imbricare. Exact această structură este transmisă în funcția <code>root.render</code>, unde are loc magia Virtual DOM.</p><p>React folosește această structură de date pentru două scopuri:</p><ul><li>Pe baza ei se construiesc și se inserează în pagină elementele DOM reale (cu ajutorul <code>document.createElement</code> și <code>appendChild)</code>, precum și se apelează renderizarea componentelor. Ca rezultat al renderizării componentelor, &quot;arborele&quot;, și odată cu el și DOM-ul real, &quot;cresc&quot; cu ramuri suplimentare, a căror structură a fost descrisă în componente.</li><li>React păstrează în ea Virtual DOM-ul (eng. Virtual DOM) - o copie virtuală a structurii curente a DOM-ului. La renderizările ulterioare, structura actualizată este comparată element cu element cu ultima copie salvată. Acest lucru permite React să determine numărul necesar de modificări și să le aplice în DOM-ul real.</li></ul><p>Această abordare a creării marcajului este mai complicată decât scrierea HTML în fișiere <code>.html</code>. Dar este necesară, deoarece majoritatea operațiunilor cu DOM-ul real sunt consumatoare de resurse pentru browser și dispozitivele utilizatorilor.</p><p>Algoritmul React, numit &quot;reconciliation&quot; (eng. &quot;reconciliere&quot;), reduce numărul acestor operațiuni la minimum. Compararea a două obiecte JavaScript chiar și complexe este mult mai rapidă decât operațiunile similare asupra arborelui DOM. Acest algoritm permite React să mențină o viteză de lucru ridicată în aplicații cu un număr mare de date în schimbare.</p>`,13),u={href:"https://developer.mozilla.org/en-US/docs/Web/Performance/Critical_rendering_path#understanding_crp",target:"_blank",rel:"noopener noreferrer"},d=a("p",null,"Aceste cunoștințe vor fi utile nu doar în cursul de React, ci și în general în orice dezvoltare web.",-1);function m(k,v){const t=s("ExternalLinkIcon");return o(),i("div",null,[l,a("p",null,[n("Puteți citi "),a("a",u,[n("despre particularitățile renderizării marcajului HTML"),p(t)]),n(" de către motorul browserului pentru a înțelege mai bine particularitățile acestui proces.")]),d])}const q=e(r,[["render",m],["__file","virtualdom.html.vue"]]),g=JSON.parse('{"path":"/base/virtualdom.html","title":"Virtual DOM","lang":"ro-RO","frontmatter":{"title":"Virtual DOM","lang":"ro-RO","description":"Virtual DOM În lecția anterioară, am analizat particularitățile renderizării marcajului și transformarea ReactDOM în DOM. A sosit momentul să aflăm ce stă în spatele acestei mag...","head":[["meta",{"property":"og:url","content":"https://react.md/base/virtualdom.html"}],["meta",{"property":"og:site_name","content":"React.js - Curs de Dezvoltare"}],["meta",{"property":"og:title","content":"Virtual DOM"}],["meta",{"property":"og:description","content":"Virtual DOM În lecția anterioară, am analizat particularitățile renderizării marcajului și transformarea ReactDOM în DOM. A sosit momentul să aflăm ce stă în spatele acestei mag..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ro-RO"}],["meta",{"property":"og:updated_time","content":"2024-03-09T11:18:09.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-09T11:18:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Virtual DOM\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-09T11:18:09.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"updatedTime":1709983089000,"contributors":[{"name":"Bargan Nicolai","email":"41567806+Nikba-Creative-Studio@users.noreply.github.com","commits":1},{"name":"nikba","email":"41567806+Nikba-Creative-Studio@users.noreply.github.com","commits":1}]},"filePathRelative":"base/virtualdom.md","autoDesc":true}');export{q as comp,g as data};
