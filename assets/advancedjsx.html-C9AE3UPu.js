import{_ as a,o as n,c as s,b as e}from"./app-KJPG7_2i.js";const t={},o=e(`<h1 id="utilizarea-avansata-a-jsx-react-children" tabindex="-1"><a class="header-anchor" href="#utilizarea-avansata-a-jsx-react-children"><span>Utilizarea avansată a JSX. React.Children</span></a></h1><p>Deja știți că JSX este foarte asemănător cu HTML: majoritatea elementelor pot avea taguri de deschidere și închidere. În cazul JSX, tot ce este scris între tagurile de deschidere și închidere ajunge în props-urile elementului. React folosește o cheie specială în obiectul <code>props</code> — <code>children</code>.</p><p>Să analizăm pe un exemplu:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">FancyParagraph</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>p className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;text-beautiful&quot;</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
        <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">const</span> <span class="token function-variable function">CoolShinySwagText</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>h1<span class="token operator">&gt;</span>Uau<span class="token operator">!</span> Ce text frumos<span class="token operator">:</span><span class="token operator">&lt;</span><span class="token operator">/</span>h1<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>FancyParagraph<span class="token operator">&gt;</span>Acest paragraf arată foarte frumos<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>FancyParagraph<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>FancyParagraph<span class="token operator">&gt;</span>Și acest paragraf nu este mai prejos decât precedentul<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>FancyParagraph<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>React plasează textul, care este scris între <code>&amp;#60;FancyParagraph&amp;#62;</code> și <code>&amp;#60;/FancyParagraph&amp;#62;</code>, în <code>children</code>. Și puteți accesa valoarea acestui prop în componenta copil prin <code>props.children</code>.</p><p>Mintea curioasă se întreabă: ce se va întâmpla dacă <code>children</code> este specificat ca <code>props</code> la componentă, și nu descris în interiorul tagului? Dacă faceți asta, nu se va întâmpla nimic rău, dar <code>children</code>, descris între tagurile elementului, va avea prioritate față de <code>children</code>, care este dat ca <code>props</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// Va fi afișat: Pizza cu ananas este minunată!</span>
<span class="token operator">&lt;</span>FancyParagraph children<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;Pizza cu ananas este oribilă!&quot;</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
    Pizza cu ananas este minunată<span class="token operator">!</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>FancyParagraph<span class="token operator">&gt;</span>

<span class="token comment">// Va fi afișat: Pizza cu ananas este oribilă!</span>
<span class="token operator">&lt;</span>FancyParagraph children<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;Pizza cu ananas este oribilă!&quot;</span><span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>În unele cazuri, <code>props.children</code> ajută la simplificarea codului și la creșterea lizibilității acestuia. Să ne uităm la un exemplu în care se folosește <code>notificationText</code> în props-uri pentru a afișa un mesaj de avertizare în componenta <code>Notification</code>:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// Componenta</span>
<span class="token keyword">const</span> <span class="token function-variable function">Notification</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;Notification&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>notificationText<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token comment">/* Atenție! A fost detectată o creștere a radiațiilor în blocul 4 */</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Utilizarea componentei</span>
<span class="token operator">&lt;</span>Notification 
    notificationText<span class="token operator">=</span><span class="token string">&quot;Atenție! A fost detectată o creștere a radiațiilor în blocul 4&quot;</span> 
<span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>În acest exemplu nu este nimic rău (cu excepția radiațiilor), dar trebuie să rețineți că componenta așteaptă ca intrarea să fie <code>notificationText</code>. Acest lucru creează o sarcină cognitivă suplimentară și consumă timp.</p><p>În schimb, putem folosi <code>props.children</code> și face codul mai lizibil:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// Componenta</span>
<span class="token keyword">const</span> <span class="token function-variable function">Notification</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;Notification&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>p<span class="token operator">&gt;</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token comment">/* Atenție! A fost detectată o creștere a radiațiilor în blocul 4 */</span><span class="token punctuation">}</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Utilizarea componentei</span>
<span class="token operator">&lt;</span>Notification<span class="token operator">&gt;</span>
    Atenție<span class="token operator">!</span> <span class="token constant">A</span> fost detectată o creștere a radiațiilor în blocul <span class="token number">4</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>Notification<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Această variantă pare mai naturală, deoarece seamănă mai mult cu HTML. Decizia de a folosi această abordare vă aparține.</p><h2 id="mai-multe-despre-props-children" tabindex="-1"><a class="header-anchor" href="#mai-multe-despre-props-children"><span>Mai multe despre props.children</span></a></h2><p>Rețineți că în <code>children</code> ajunge tot ce este situat între tagurile de deschidere și închidere ale elementului.</p><p>Acest lucru oferă posibilități suplimentare pentru crearea UI:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">DropdownMenu</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">props</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;DropdownMenu&quot;</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>span className<span class="token operator">=</span><span class="token string">&quot;DropdownMenu-heading&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span>props<span class="token punctuation">.</span>heading<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>span<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;DropdownMenu-items&quot;</span><span class="token operator">&gt;</span>
            <span class="token punctuation">{</span>props<span class="token punctuation">.</span>children<span class="token punctuation">}</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token keyword">const</span> <span class="token function-variable function">NavBar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>

 <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>nav<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>Logo <span class="token operator">/</span><span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>DropdownMenu heading<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;Meniu&quot;</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>li className<span class="token operator">=</span><span class="token string">&quot;DropdownMenu-item&quot;</span><span class="token operator">&gt;</span>Despre magazin<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>li className<span class="token operator">=</span><span class="token string">&quot;DropdownMenu-item&quot;</span><span class="token operator">&gt;</span>Livrare<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>li className<span class="token operator">=</span><span class="token string">&quot;DropdownMenu-item&quot;</span><span class="token operator">&gt;</span>Plată<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>hr <span class="token operator">/</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>li className<span class="token operator">=</span><span class="token string">&quot;DropdownMenu-item&quot;</span><span class="token operator">&gt;</span><span class="token constant">L</span>ăsați un comentariu<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
                <span class="token operator">&lt;</span>li className<span class="token operator">=</span><span class="token string">&quot;DropdownMenu-item&quot;</span><span class="token operator">&gt;</span>Politica de confidențialitate<span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span><span class="token operator">/</span>DropdownMenu<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>nav<span class="token operator">&gt;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>În acest exemplu, meniul de pe site este format în componenta <code>NavBar</code>. Apoi, cu respectarea structurii HTML, este randat în componenta <code>DropdownMenu</code> cu ajutorul <code>props.children</code>. Un astfel de meniu poate fi folosit în diferite locuri ale site-ului cu conținut diferit și puteți fi siguri că se va comporta identic.</p><p>Abilitatea de a folosi <code>props.children</code> permite crearea unei interfețe de utilizator mai flexibile pentru personalizare.</p><p>În lecția următoare, veți avea o călătorie fascinantă în lumea stării în aplicațiile web scrise folosind biblioteca React.</p>`,20),p=[o];function r(i,c){return n(),s("div",null,p)}const d=a(t,[["render",r],["__file","advancedjsx.html.vue"]]),u=JSON.parse('{"path":"/base/advancedjsx.html","title":"Utilizarea avansată a JSX. React.Children","lang":"ro-RO","frontmatter":{"title":"Utilizarea avansată a JSX. React.Children","lang":"ro-RO","description":"Utilizarea avansată a JSX. React.Children Deja știți că JSX este foarte asemănător cu HTML: majoritatea elementelor pot avea taguri de deschidere și închidere. În cazul JSX, tot...","head":[["meta",{"property":"og:url","content":"https://react.md/base/advancedjsx.html"}],["meta",{"property":"og:site_name","content":"React.js - Curs de Dezvoltare"}],["meta",{"property":"og:title","content":"Utilizarea avansată a JSX. React.Children"}],["meta",{"property":"og:description","content":"Utilizarea avansată a JSX. React.Children Deja știți că JSX este foarte asemănător cu HTML: majoritatea elementelor pot avea taguri de deschidere și închidere. În cazul JSX, tot..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ro-RO"}],["meta",{"property":"og:updated_time","content":"2024-03-09T11:18:09.000Z"}],["meta",{"property":"article:modified_time","content":"2024-03-09T11:18:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Utilizarea avansată a JSX. React.Children\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-09T11:18:09.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Mai multe despre props.children","slug":"mai-multe-despre-props-children","link":"#mai-multe-despre-props-children","children":[]}],"git":{"updatedTime":1709983089000,"contributors":[{"name":"Bargan Nicolai","email":"41567806+Nikba-Creative-Studio@users.noreply.github.com","commits":1},{"name":"nikba","email":"41567806+Nikba-Creative-Studio@users.noreply.github.com","commits":1}]},"filePathRelative":"base/advancedjsx.md","autoDesc":true}');export{d as comp,u as data};
